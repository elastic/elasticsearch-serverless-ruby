steps:
  - key: create_project
    label: "Create :elasticsearch: Serverless project"
    agents:
      image: docker.elastic.co/employees/dolaru/qaf:latest
    env:
      EC_REGISTER_BACKEND: appex-qa-team-cluster
      EC_ENV: qa
      EC_REGION: aws-eu-west-1
    command: |
      export EC_PROJECT_NAME="serverless_ruby_$BUILDKITE_BUILD_ID"
      qaf elastic-cloud projects create --project-type elasticsearch &&
      qaf elastic-cloud projects describe $EC_PROJECT_NAME --as-json --show-credentials > project.json &&
      buildkite-agent meta-data set "elasticsearch_url" `jq -r '.elasticsearch["url"]' project.json` &&
      buildkite-agent meta-data set "api_key" `jq -r '.credentials["api_key"]' project.json` &&
      rm project.json
  - key: unit_tests
    label: ":elasticsearch: Serverless :rspec: Unit Tests :ruby: {{matrix.ruby_source}}:{{ matrix.ruby }}"
    agents:
      provider: "gcp"
    env:
      RUBY_VERSION: "{{ matrix.ruby }}"
      TEST_SUITE: 'unit'
      RUBY_SOURCE: "{{ matrix.ruby_source }}"
    matrix:
      setup:
        ruby:
          - "3.2"
          - "3.1"
          - "3.0"
        ruby_source:
          - 'ruby'
      adjustments:
        - with:
            ruby_source: 'jruby'
            ruby: '9.3'
        - with:
            ruby_source: 'jruby'
            ruby: '9.4'
    command: './.buildkite/run-tests.sh'
  - depends_on:
      - step: create_project
        allow_failure: false
    key: api_tests
    label: ":elasticsearch: Serverless :rspec: API Tests :ruby: {{ matrix.ruby_source}}:{{ matrix.ruby }}"
    agents:
      provider: "gcp"
    env:
      RUBY_VERSION: "{{ matrix.ruby }}"
      TEST_SUITE: 'api'
      RUBY_SOURCE: "{{ matrix.ruby_source }}"
    matrix:
      setup:
        ruby:
          - "3.2"
          - "3.1"
          - "3.0"
        ruby_source:
          - 'ruby'
      adjustments:
        - with:
            ruby_source: 'jruby'
            ruby: '9.3'
        - with:
            ruby_source: 'jruby'
            ruby: '9.4'
    command: './.buildkite/run-tests.sh'
  - depends_on:
      - step: api_tests
        allow_failure: true
    label: ':broom::sparkles: Clean Elasticsearch project'
    agents:
      image: docker.elastic.co/employees/dolaru/qaf:latest
    env:
      EC_REGISTER_BACKEND: appex-qa-team-cluster
    command: |
      export EC_PROJECT_NAME="serverless_ruby_$BUILDKITE_BUILD_ID"
      qaf elastic-cloud projects delete
